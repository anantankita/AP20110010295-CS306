
#
ÿÿÿÿÿÿÿÿn : identifier
<: Relational operator LT
stdio : identifier
.
h : identifier
>: Relational operator GT 
int : keyword 
main : identifier
(
)
{ 
double : keyword 
a : identifier
,
b : identifier
,
product : identifier
;
printf : identifier
(
"
Enter : identifier
two : identifier
numbers : identifier
:
"
)
;
scanf : identifier
(
"
%
lf : identifier
%
lf : identifier
"
,
&
a : identifier
,
&
b : identifier
)
;
//: Invalid lexeme
Calculating : identifier
product : identifier
product : identifier
!
a : identifier
*
b : identifier
;
//: Invalid lexeme
%
. 
2: number
lf : identifier
displays : identifier
number : identifier
up : identifier
to : identifier 
2: number
decimal : identifier
point : identifier
printf : identifier
(
"
Product : identifier
!
%
. 
2: number
lf : identifier
"
,
product : identifier
)
;
return : identifier 
0: number
;
}